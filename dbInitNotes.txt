

### Postgres Prep ###

C:\Python\Flask\base>psql -U postgres
psql (10.5)
postgres=# CREATE DATABASE base;
CREATE DATABASE
postgres=# CREATE USER manager WITH PASSWORD 'S3c***1';
ERROR:  role "manager" already exists
postgres=# GRANT ALL PRIVILEGES ON DATABASE base TO manager;
GRANT
postgres=#


### Set Environment Variables ###
 POSTGRESS_PASSWORD

### ENV ###
. ./env.sh
export FLASK_APP=base.py
echo "FLASK_APP is $FLASK_APP"

export POSTGRESS_HOST = "localhost"
export POSTGRESS_PORT = "5432"
export POSTGRESS_DB = "base"
export POSTGRESS_USER = "manager"

export MAIL_SERVER=smtp.googlemail.com
export MAIL_PORT=587
export MAIL_USE_TLS=1
export MAIL_USERNAME=edbullen.app@gmail.com	
#export MAIL_PASSWORD=
echo "Please manually set MAIL_PASSWORD"
echo "Please manually set POSTGRESS_PASSWORD"


### ...and in config.py
    POSTGRES_URL = 'postgresql://{}:{}@{}:{}/{}'

    POSTGRES_HOST = os.environ.get('POSTGRES_HOST')
    POSTGRES_PORT = os.environ.get('POSTGRES_PORT')
    POSTGRES_DB = os.environ.get('POSTGRES_DB')
    POSTGRES_USER = os.environ.get('POSTGRES_USER')
    POSTGRES_PASSWORD = os.environ.get('POSTGRES_PASSWORD')
    SQLALCHEMY_DATABASE_URI = os.environ.get('DATABASE_URL') or \
        POSTGRES_URL.format(POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_HOST, POSTGRES_PORT, POSTGRES_DB)

### ----- Main Flask Steps ------- ###

$ flask db init

$ flask db migrate -m "users table"

>>> INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
>>> INFO  [alembic.runtime.migration] Will assume transactional DDL.
>>> INFO  [alembic.autogenerate.compare] Detected added table 'user'
>>> INFO  [alembic.autogenerate.compare] Detected added index 'ix_user_email' on '['email']'
>>> INFO  [alembic.autogenerate.compare] Detected added index 'ix_user_username' on '['username']'
>>> Generating C:\python\flask\base\migrations\versions\d20546e79164_users_table.py ... done


$ flask db upgrade
>>> INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
>>> INFO  [alembic.runtime.migration] Will assume transactional DDL.
>>> INFO  [alembic.runtime.migration] Running upgrade  -> d20546e79164, users table



postgres-# \connect hiredata
WARNING: Console code page (850) differs from Windows code page (1252)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
You are now connected to database "hiredata" as user "postgres".
hiredata-# \dt
             List of relations
 Schema |      Name       | Type  |  Owner
--------+-----------------+-------+---------
 public | alembic_version | table | manager
 public | user            | table | manager
(2 rows)


### ----- Adding an attribute to the database models ####

1. Added the line

class User(UserMixin, db.Model):
    ...
    ...
    about_me = db.Column(db.String(140))
    ...
    ...

2. new database migration needs to be generated:

$ flask db migrate -m "added about_me to User"
>>> INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
>>> INFO  [alembic.runtime.migration] Will assume transactional DDL.
>>> INFO  [alembic.ddl.postgresql] Detected sequence named 'user_id_seq' as owned by integer column 'user(id)', assuming SERIAL >>> and omitting
>>> INFO  [alembic.autogenerate.compare] Detected added column 'user.about_me'
>>> Generating C:\python\flask\base\migrations\versions\50af0bb71635_added_about_me_to_user.py ... done

3. migration needs to be applied to the database:

$ flask db upgrade

>>> INFO  [alembic.runtime.migration] Context impl PostgresqlImpl.
>>> INFO  [alembic.runtime.migration] Will assume transactional DDL.
>>> INFO  [alembic.runtime.migration] Running upgrade 8c065f1dda19 -> 50af0bb71635, added about_me to User

